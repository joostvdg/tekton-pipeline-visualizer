/*
 * This file is generated by jOOQ.
 */
package net.joostvdg.tektonvisualizer.model.tables;


import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import net.joostvdg.tektonvisualizer.model.Keys;
import net.joostvdg.tektonvisualizer.model.Public;
import net.joostvdg.tektonvisualizer.model.tables.CodeSource.CodeSourcePath;
import net.joostvdg.tektonvisualizer.model.tables.SupplyChain.SupplyChainPath;
import net.joostvdg.tektonvisualizer.model.tables.records.SupplyChainCodeSourceRecord;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SupplyChainCodeSource extends TableImpl<SupplyChainCodeSourceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.supply_chain_code_source</code>
     */
    public static final SupplyChainCodeSource SUPPLY_CHAIN_CODE_SOURCE = new SupplyChainCodeSource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SupplyChainCodeSourceRecord> getRecordType() {
        return SupplyChainCodeSourceRecord.class;
    }

    /**
     * The column <code>public.supply_chain_code_source.supply_chain_id</code>.
     */
    public final TableField<SupplyChainCodeSourceRecord, Integer> SUPPLY_CHAIN_ID = createField(DSL.name("supply_chain_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.supply_chain_code_source.code_source_id</code>.
     */
    public final TableField<SupplyChainCodeSourceRecord, Integer> CODE_SOURCE_ID = createField(DSL.name("code_source_id"), SQLDataType.INTEGER.nullable(false), this, "");

    private SupplyChainCodeSource(Name alias, Table<SupplyChainCodeSourceRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private SupplyChainCodeSource(Name alias, Table<SupplyChainCodeSourceRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>public.supply_chain_code_source</code> table
     * reference
     */
    public SupplyChainCodeSource(String alias) {
        this(DSL.name(alias), SUPPLY_CHAIN_CODE_SOURCE);
    }

    /**
     * Create an aliased <code>public.supply_chain_code_source</code> table
     * reference
     */
    public SupplyChainCodeSource(Name alias) {
        this(alias, SUPPLY_CHAIN_CODE_SOURCE);
    }

    /**
     * Create a <code>public.supply_chain_code_source</code> table reference
     */
    public SupplyChainCodeSource() {
        this(DSL.name("supply_chain_code_source"), null);
    }

    public <O extends Record> SupplyChainCodeSource(Table<O> path, ForeignKey<O, SupplyChainCodeSourceRecord> childPath, InverseForeignKey<O, SupplyChainCodeSourceRecord> parentPath) {
        super(path, childPath, parentPath, SUPPLY_CHAIN_CODE_SOURCE);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class SupplyChainCodeSourcePath extends SupplyChainCodeSource implements Path<SupplyChainCodeSourceRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> SupplyChainCodeSourcePath(Table<O> path, ForeignKey<O, SupplyChainCodeSourceRecord> childPath, InverseForeignKey<O, SupplyChainCodeSourceRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private SupplyChainCodeSourcePath(Name alias, Table<SupplyChainCodeSourceRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public SupplyChainCodeSourcePath as(String alias) {
            return new SupplyChainCodeSourcePath(DSL.name(alias), this);
        }

        @Override
        public SupplyChainCodeSourcePath as(Name alias) {
            return new SupplyChainCodeSourcePath(alias, this);
        }

        @Override
        public SupplyChainCodeSourcePath as(Table<?> alias) {
            return new SupplyChainCodeSourcePath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<SupplyChainCodeSourceRecord> getPrimaryKey() {
        return Keys.SUPPLY_CHAIN_CODE_SOURCE_PKEY;
    }

    @Override
    public List<ForeignKey<SupplyChainCodeSourceRecord, ?>> getReferences() {
        return Arrays.asList(Keys.SUPPLY_CHAIN_CODE_SOURCE__SUPPLY_CHAIN_CODE_SOURCE_SUPPLY_CHAIN_ID_FKEY, Keys.SUPPLY_CHAIN_CODE_SOURCE__SUPPLY_CHAIN_CODE_SOURCE_CODE_SOURCE_ID_FKEY);
    }

    private transient SupplyChainPath _supplyChain;

    /**
     * Get the implicit join path to the <code>public.supply_chain</code> table.
     */
    public SupplyChainPath supplyChain() {
        if (_supplyChain == null)
            _supplyChain = new SupplyChainPath(this, Keys.SUPPLY_CHAIN_CODE_SOURCE__SUPPLY_CHAIN_CODE_SOURCE_SUPPLY_CHAIN_ID_FKEY, null);

        return _supplyChain;
    }

    private transient CodeSourcePath _codeSource;

    /**
     * Get the implicit join path to the <code>public.code_source</code> table.
     */
    public CodeSourcePath codeSource() {
        if (_codeSource == null)
            _codeSource = new CodeSourcePath(this, Keys.SUPPLY_CHAIN_CODE_SOURCE__SUPPLY_CHAIN_CODE_SOURCE_CODE_SOURCE_ID_FKEY, null);

        return _codeSource;
    }

    @Override
    public SupplyChainCodeSource as(String alias) {
        return new SupplyChainCodeSource(DSL.name(alias), this);
    }

    @Override
    public SupplyChainCodeSource as(Name alias) {
        return new SupplyChainCodeSource(alias, this);
    }

    @Override
    public SupplyChainCodeSource as(Table<?> alias) {
        return new SupplyChainCodeSource(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public SupplyChainCodeSource rename(String name) {
        return new SupplyChainCodeSource(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SupplyChainCodeSource rename(Name name) {
        return new SupplyChainCodeSource(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public SupplyChainCodeSource rename(Table<?> name) {
        return new SupplyChainCodeSource(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SupplyChainCodeSource where(Condition condition) {
        return new SupplyChainCodeSource(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SupplyChainCodeSource where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SupplyChainCodeSource where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SupplyChainCodeSource where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SupplyChainCodeSource where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SupplyChainCodeSource where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SupplyChainCodeSource where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SupplyChainCodeSource where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SupplyChainCodeSource whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SupplyChainCodeSource whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
