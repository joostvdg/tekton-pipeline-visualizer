/*
 * This file is generated by jOOQ.
 */
package net.joostvdg.tektonvisualizer.model;


import net.joostvdg.tektonvisualizer.model.tables.CodeSource;
import net.joostvdg.tektonvisualizer.model.tables.FlywaySchemaHistory;
import net.joostvdg.tektonvisualizer.model.tables.PipelineResult;
import net.joostvdg.tektonvisualizer.model.tables.PipelineStage;
import net.joostvdg.tektonvisualizer.model.tables.PipelineStatus;
import net.joostvdg.tektonvisualizer.model.tables.PipelineStatusSupplyChain;
import net.joostvdg.tektonvisualizer.model.tables.PipelineTrigger;
import net.joostvdg.tektonvisualizer.model.tables.SupplyChain;
import net.joostvdg.tektonvisualizer.model.tables.SupplyChainCodeSource;
import net.joostvdg.tektonvisualizer.model.tables.records.CodeSourceRecord;
import net.joostvdg.tektonvisualizer.model.tables.records.FlywaySchemaHistoryRecord;
import net.joostvdg.tektonvisualizer.model.tables.records.PipelineResultRecord;
import net.joostvdg.tektonvisualizer.model.tables.records.PipelineStageRecord;
import net.joostvdg.tektonvisualizer.model.tables.records.PipelineStatusRecord;
import net.joostvdg.tektonvisualizer.model.tables.records.PipelineStatusSupplyChainRecord;
import net.joostvdg.tektonvisualizer.model.tables.records.PipelineTriggerRecord;
import net.joostvdg.tektonvisualizer.model.tables.records.SupplyChainCodeSourceRecord;
import net.joostvdg.tektonvisualizer.model.tables.records.SupplyChainRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CodeSourceRecord> CODE_SOURCE_PKEY = Internal.createUniqueKey(CodeSource.CODE_SOURCE, DSL.name("code_source_pkey"), new TableField[] { CodeSource.CODE_SOURCE.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<PipelineResultRecord> PIPELINE_RESULT_PKEY = Internal.createUniqueKey(PipelineResult.PIPELINE_RESULT, DSL.name("pipeline_result_pkey"), new TableField[] { PipelineResult.PIPELINE_RESULT.ID }, true);
    public static final UniqueKey<PipelineStageRecord> PIPELINE_STAGE_PKEY = Internal.createUniqueKey(PipelineStage.PIPELINE_STAGE, DSL.name("pipeline_stage_pkey"), new TableField[] { PipelineStage.PIPELINE_STAGE.ID }, true);
    public static final UniqueKey<PipelineStatusRecord> PIPELINE_STATUS_PKEY = Internal.createUniqueKey(PipelineStatus.PIPELINE_STATUS, DSL.name("pipeline_status_pkey"), new TableField[] { PipelineStatus.PIPELINE_STATUS.ID }, true);
    public static final UniqueKey<PipelineStatusSupplyChainRecord> PIPELINE_STATUS_SUPPLY_CHAIN_PKEY = Internal.createUniqueKey(PipelineStatusSupplyChain.PIPELINE_STATUS_SUPPLY_CHAIN, DSL.name("pipeline_status_supply_chain_pkey"), new TableField[] { PipelineStatusSupplyChain.PIPELINE_STATUS_SUPPLY_CHAIN.PIPELINE_STATUS_ID, PipelineStatusSupplyChain.PIPELINE_STATUS_SUPPLY_CHAIN.SUPPLY_CHAIN_ID }, true);
    public static final UniqueKey<PipelineTriggerRecord> PIPELINE_TRIGGER_PKEY = Internal.createUniqueKey(PipelineTrigger.PIPELINE_TRIGGER, DSL.name("pipeline_trigger_pkey"), new TableField[] { PipelineTrigger.PIPELINE_TRIGGER.ID }, true);
    public static final UniqueKey<SupplyChainRecord> SUPPLY_CHAIN_PKEY = Internal.createUniqueKey(SupplyChain.SUPPLY_CHAIN, DSL.name("supply_chain_pkey"), new TableField[] { SupplyChain.SUPPLY_CHAIN.ID }, true);
    public static final UniqueKey<SupplyChainCodeSourceRecord> SUPPLY_CHAIN_CODE_SOURCE_PKEY = Internal.createUniqueKey(SupplyChainCodeSource.SUPPLY_CHAIN_CODE_SOURCE, DSL.name("supply_chain_code_source_pkey"), new TableField[] { SupplyChainCodeSource.SUPPLY_CHAIN_CODE_SOURCE.SUPPLY_CHAIN_ID, SupplyChainCodeSource.SUPPLY_CHAIN_CODE_SOURCE.CODE_SOURCE_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PipelineResultRecord, PipelineStatusRecord> PIPELINE_RESULT__PIPELINE_RESULT_PIPELINE_STATUS_ID_FKEY = Internal.createForeignKey(PipelineResult.PIPELINE_RESULT, DSL.name("pipeline_result_pipeline_status_id_fkey"), new TableField[] { PipelineResult.PIPELINE_RESULT.PIPELINE_STATUS_ID }, Keys.PIPELINE_STATUS_PKEY, new TableField[] { PipelineStatus.PIPELINE_STATUS.ID }, true);
    public static final ForeignKey<PipelineStageRecord, PipelineStatusRecord> PIPELINE_STAGE__PIPELINE_STAGE_PIPELINE_STATUS_ID_FKEY = Internal.createForeignKey(PipelineStage.PIPELINE_STAGE, DSL.name("pipeline_stage_pipeline_status_id_fkey"), new TableField[] { PipelineStage.PIPELINE_STAGE.PIPELINE_STATUS_ID }, Keys.PIPELINE_STATUS_PKEY, new TableField[] { PipelineStatus.PIPELINE_STATUS.ID }, true);
    public static final ForeignKey<PipelineStatusSupplyChainRecord, PipelineStatusRecord> PIPELINE_STATUS_SUPPLY_CHAIN__PIPELINE_STATUS_SUPPLY_CHAIN_PIPELINE_STATUS_ID_FKEY = Internal.createForeignKey(PipelineStatusSupplyChain.PIPELINE_STATUS_SUPPLY_CHAIN, DSL.name("pipeline_status_supply_chain_pipeline_status_id_fkey"), new TableField[] { PipelineStatusSupplyChain.PIPELINE_STATUS_SUPPLY_CHAIN.PIPELINE_STATUS_ID }, Keys.PIPELINE_STATUS_PKEY, new TableField[] { PipelineStatus.PIPELINE_STATUS.ID }, true);
    public static final ForeignKey<PipelineStatusSupplyChainRecord, SupplyChainRecord> PIPELINE_STATUS_SUPPLY_CHAIN__PIPELINE_STATUS_SUPPLY_CHAIN_SUPPLY_CHAIN_ID_FKEY = Internal.createForeignKey(PipelineStatusSupplyChain.PIPELINE_STATUS_SUPPLY_CHAIN, DSL.name("pipeline_status_supply_chain_supply_chain_id_fkey"), new TableField[] { PipelineStatusSupplyChain.PIPELINE_STATUS_SUPPLY_CHAIN.SUPPLY_CHAIN_ID }, Keys.SUPPLY_CHAIN_PKEY, new TableField[] { SupplyChain.SUPPLY_CHAIN.ID }, true);
    public static final ForeignKey<PipelineTriggerRecord, PipelineStatusRecord> PIPELINE_TRIGGER__PIPELINE_TRIGGER_PIPELINE_STATUS_ID_FKEY = Internal.createForeignKey(PipelineTrigger.PIPELINE_TRIGGER, DSL.name("pipeline_trigger_pipeline_status_id_fkey"), new TableField[] { PipelineTrigger.PIPELINE_TRIGGER.PIPELINE_STATUS_ID }, Keys.PIPELINE_STATUS_PKEY, new TableField[] { PipelineStatus.PIPELINE_STATUS.ID }, true);
    public static final ForeignKey<SupplyChainCodeSourceRecord, CodeSourceRecord> SUPPLY_CHAIN_CODE_SOURCE__SUPPLY_CHAIN_CODE_SOURCE_CODE_SOURCE_ID_FKEY = Internal.createForeignKey(SupplyChainCodeSource.SUPPLY_CHAIN_CODE_SOURCE, DSL.name("supply_chain_code_source_code_source_id_fkey"), new TableField[] { SupplyChainCodeSource.SUPPLY_CHAIN_CODE_SOURCE.CODE_SOURCE_ID }, Keys.CODE_SOURCE_PKEY, new TableField[] { CodeSource.CODE_SOURCE.ID }, true);
    public static final ForeignKey<SupplyChainCodeSourceRecord, SupplyChainRecord> SUPPLY_CHAIN_CODE_SOURCE__SUPPLY_CHAIN_CODE_SOURCE_SUPPLY_CHAIN_ID_FKEY = Internal.createForeignKey(SupplyChainCodeSource.SUPPLY_CHAIN_CODE_SOURCE, DSL.name("supply_chain_code_source_supply_chain_id_fkey"), new TableField[] { SupplyChainCodeSource.SUPPLY_CHAIN_CODE_SOURCE.SUPPLY_CHAIN_ID }, Keys.SUPPLY_CHAIN_PKEY, new TableField[] { SupplyChain.SUPPLY_CHAIN.ID }, true);
}
