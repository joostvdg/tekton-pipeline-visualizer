{
    "apiVersion": "tekton.dev/v1",
    "kind": "PipelineRun",
    "metadata": {
        "annotations": {
            "chains.tekton.dev/cert-pipelinerun-201d033f-e5fc-4f7e-b974-30c7ff062ff7": "",
            "chains.tekton.dev/chain-pipelinerun-201d033f-e5fc-4f7e-b974-30c7ff062ff7": "",
            "chains.tekton.dev/payload-pipelinerun-201d033f-e5fc-4f7e-b974-30c7ff062ff7": "eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjAuMSIsInByZWRpY2F0ZVR5cGUiOiJodHRwczovL3Nsc2EuZGV2L3Byb3ZlbmFuY2UvdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiaGFyYm9yLmhvbWUubGFiL2hvbWVsYWIvaWRlYyIsImRpZ2VzdCI6eyJzaGEyNTYiOiJhOGYzODZkNmRlMjU5NzVkMmI4Nzc4OTM1MDBiZjg1MGFhZTk5ZDI5ZTJkNDU4ZTI4NWVhOWE5ZjU2ODhkYjJlIn19XSwicHJlZGljYXRlIjp7ImJ1aWxkRGVmaW5pdGlvbiI6eyJidWlsZFR5cGUiOiJodHRwczovL3Rla3Rvbi5kZXYvY2hhaW5zL3YyL3Nsc2EiLCJleHRlcm5hbFBhcmFtZXRlcnMiOnsicnVuU3BlYyI6eyJwaXBlbGluZVJlZiI6eyJuYW1lIjoiaWRlYy1pbWFnZS1idWlsZHMifSwicGFyYW1zIjpbeyJuYW1lIjoiZ2l0cmV2aXNpb24iLCJ2YWx1ZSI6ImY2OWRjOTQ3NDM0NTJmMGVmODA5MDRhYjM1YjQ0YmZiODU5Y2NmMzEifSx7Im5hbWUiOiJyZXBvLXVybCIsInZhbHVlIjoiaHR0cHM6Ly9naXRodWIuY29tL2pvb3N0dmRnL2luZ3Jlc3MtZG5zLWV4cG9ydC1jb250cm9sbGVyLmdpdCJ9LHsibmFtZSI6ImJhc2UiLCJ2YWx1ZSI6IjAuMiJ9LHsibmFtZSI6InJlZ2lzdHJ5IiwidmFsdWUiOiJoYXJib3IuaG9tZS5sYWIifSx7Im5hbWUiOiJyZXBvIiwidmFsdWUiOiJob21lbGFiL2lkZWMifSx7Im5hbWUiOiJjb21taXRfbWVzc2FnZSIsInZhbHVlIjoidGljayBvZiBzb21lIG1vcmUifSx7Im5hbWUiOiJjb21taXRfYXV0aG9yIiwidmFsdWUiOiJKb29zdCB2YW4gZGVyIEdyaWVuZHQifSx7Im5hbWUiOiJjb21taXRfYXV0aG9yX2VtYWlsIiwidmFsdWUiOiJqb29zdHZkZ0BnbWFpbC5jb20ifSx7Im5hbWUiOiJjb21taXRfdGltZXN0YW1wIiwidmFsdWUiOiIyMDI0LTA1LTE1VDAwOjE1OjE5KzAyOjAwIn1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJkZWZhdWx0IiwidGltZW91dHMiOnsicGlwZWxpbmUiOiIxaDBtMHMifSwid29ya3NwYWNlcyI6W3sibmFtZSI6ImNoZWNrb3V0Iiwidm9sdW1lQ2xhaW1UZW1wbGF0ZSI6eyJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbH0sInNwZWMiOnsiYWNjZXNzTW9kZXMiOlsiUmVhZFdyaXRlT25jZSJdLCJyZXNvdXJjZXMiOnsicmVxdWVzdHMiOnsic3RvcmFnZSI6IjFHaSJ9fX0sInN0YXR1cyI6e319fSx7Im5hbWUiOiJyZWdpc3RyeS1jcmVkZW50aWFscyIsInNlY3JldCI6eyJzZWNyZXROYW1lIjoia2FuaWtvLWhhcmJvciJ9fSx7Im5hbWUiOiJtYXZlbi1zZXR0aW5ncyIsImVtcHR5RGlyIjp7fX0seyJuYW1lIjoiaGVsbS1jb25maWciLCJlbXB0eURpciI6e319XX19LCJpbnRlcm5hbFBhcmFtZXRlcnMiOnsidGVrdG9uLXBpcGVsaW5lcy1mZWF0dXJlLWZsYWdzIjp7IkRpc2FibGVBZmZpbml0eUFzc2lzdGFudCI6ZmFsc2UsIkRpc2FibGVDcmVkc0luaXQiOmZhbHNlLCJSdW5uaW5nSW5FbnZXaXRoSW5qZWN0ZWRTaWRlY2FycyI6dHJ1ZSwiUmVxdWlyZUdpdFNTSFNlY3JldEtub3duSG9zdHMiOmZhbHNlLCJFbmFibGVUZWt0b25PQ0lCdW5kbGVzIjpmYWxzZSwiU2NvcGVXaGVuRXhwcmVzc2lvbnNUb1Rhc2siOmZhbHNlLCJFbmFibGVBUElGaWVsZHMiOiJiZXRhIiwiU2VuZENsb3VkRXZlbnRzRm9yUnVucyI6ZmFsc2UsIkF3YWl0U2lkZWNhclJlYWRpbmVzcyI6dHJ1ZSwiRW5mb3JjZU5vbmZhbHNpZmlhYmlsaXR5Ijoibm9uZSIsIlZlcmlmaWNhdGlvbk5vTWF0Y2hQb2xpY3kiOiJpZ25vcmUiLCJFbmFibGVQcm92ZW5hbmNlSW5TdGF0dXMiOnRydWUsIlJlc3VsdEV4dHJhY3Rpb25NZXRob2QiOiJ0ZXJtaW5hdGlvbi1tZXNzYWdlIiwiTWF4UmVzdWx0U2l6ZSI6NDA5NiwiU2V0U2VjdXJpdHlDb250ZXh0IjpmYWxzZSwiQ29zY2hlZHVsZSI6IndvcmtzcGFjZXMifX0sInJlc29sdmVkRGVwZW5kZW5jaWVzIjpbeyJ1cmkiOiJvY2k6Ly9nY3IuaW8vdGVrdG9uLXJlbGVhc2VzL2dpdGh1Yi5jb20vdGVrdG9uY2QvcGlwZWxpbmUvY21kL2dpdC1pbml0IiwiZGlnZXN0Ijp7InNoYTI1NiI6IjU3OWM1NjQ3MzJjOTZlMmJiMzM3YWVmMjIzYzVkNTJlNWNlYzI3N2YxZjQ2YmUwZWFhMGRmMGYyNzk3ZTBjYjQifX0seyJ1cmkiOiJvY2k6Ly9naGNyLmlvL2pvb3N0dmRnL2dpdC1uZXh0LXRhZyIsImRpZ2VzdCI6eyJzaGEyNTYiOiI2YzE5MGNiMzBiODIyMzUzYmIzMWZmOTRiOTlmMGZiOWJiYzZjMGU1NjlmYjdmMTg1MjhhNTBlOThmMTk0YTI0In19LHsidXJpIjoib2NpOi8vcmVnaXN0cnkuYWNjZXNzLnJlZGhhdC5jb20vdWJpOC91YmktbWluaW1hbCIsImRpZ2VzdCI6eyJzaGEyNTYiOiI1Y2ZiYWY0NWNhOTY4MDY5MTc4MzBjMTgzZTlmMzdkZjJlOTEzYjE4N2FhZGIzMmU4OWZkODNmYTQ1NWViYWE2In19LHsidXJpIjoib2NpOi8vZG9ja2VyLmlvL2xpYnJhcnkvbWF2ZW4iLCJkaWdlc3QiOnsic2hhMjU2IjoiZWY2Yzg1MTI1NDQ5MDgyNzc1ZTAxMmI3MmI3NGM2MWFhZGUwODhkYzI3ZGZiMGJlOGNjMTJiODU0MzhiOGI5MCJ9fSx7InVyaSI6Im9jaTovL2djci5pby9rYW5pa28tcHJvamVjdC9leGVjdXRvciIsImRpZ2VzdCI6eyJzaGEyNTYiOiJjNjE2NjcxN2Y3ZmUwYjdkYTQ0OTA4Yzk4NjEzN2VjZmVhYjIxZjMxZWMzOTkyZjZlMTI4ZmZmOGE5NGJlOGE1In19LHsidXJpIjoib2NpOi8vZG9ja2VyLmlvL2xpYnJhcnkvYmFzaCIsImRpZ2VzdCI6eyJzaGEyNTYiOiJjNTIzYzYzNmI3MjIzMzlmNDFiNmE0MzFiNDQ1ODhhYjJmNzYyYzVkZTVlYzNiZDc5NjQ0MjBmZjk4MmZiMWQ5In19LHsidXJpIjoib2NpOi8vZ2hjci5pby9qb29zdHZkZy9hbHBpbmUtaGVsbSIsImRpZ2VzdCI6eyJzaGEyNTYiOiIxNjdlNWU4YzllNWM4YWU3YzIxMjcyMjgyODAzY2RhZmRkNmUzZGU0MjRjMGM3MjQ4ZDcxOTk2OTU5ZDg1MWM0In19XX0sInJ1bkRldGFpbHMiOnsiYnVpbGRlciI6eyJpZCI6Imh0dHBzOi8vdGVrdG9uLmRldi9jaGFpbnMvdjIifSwibWV0YWRhdGEiOnsiaW52b2NhdGlvbklEIjoiMjAxZDAzM2YtZTVmYy00ZjdlLWI5NzQtMzBjN2ZmMDYyZmY3Iiwic3RhcnRlZE9uIjoiMjAyNC0wNS0xNlQyMDo1NTo1N1oiLCJmaW5pc2hlZE9uIjoiMjAyNC0wNS0xNlQyMDo1ODoyN1oifSwiYnlwcm9kdWN0cyI6W3sibmFtZSI6InBpcGVsaW5lUnVuUmVzdWx0cy9JTUFHRV9VUkwiLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIiwiY29udGVudCI6IkltaGhjbUp2Y2k1b2IyMWxMbXhoWWk5b2IyMWxiR0ZpTDJsa1pXTTZNQzR5TGpVaSJ9LHsibmFtZSI6InBpcGVsaW5lUnVuUmVzdWx0cy9JTUFHRV9ESUdFU1QiLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIiwiY29udGVudCI6IkluTm9ZVEkxTmpwaE9HWXpPRFprTm1SbE1qVTVOelZrTW1JNE56YzRPVE0xTURCaVpqZzFNR0ZoWlRrNVpESTVaVEprTkRVNFpUSTROV1ZoT1dFNVpqVTJPRGhrWWpKbElnPT0ifSx7Im5hbWUiOiJwaXBlbGluZVJ1blJlc3VsdHMvVkVSU0lPTiIsIm1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL2pzb24iLCJjb250ZW50IjoiSWpBdU1pNDFJZz09In0seyJuYW1lIjoicGlwZWxpbmVSdW5SZXN1bHRzL1JFUE9fVVJMIiwibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vanNvbiIsImNvbnRlbnQiOiJJbWgwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzlxYjI5emRIWmtaeTlwYm1keVpYTnpMV1J1Y3kxbGVIQnZjblF0WTI5dWRISnZiR3hsY2k1bmFYUWkifSx7Im5hbWUiOiJwaXBlbGluZVJ1blJlc3VsdHMvUkVQT19DT01NSVRfVElNRVNUQU1QIiwibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vanNvbiIsImNvbnRlbnQiOiJJakUzTVRVM01qUTVNVGtpIn0seyJuYW1lIjoicGlwZWxpbmVSdW5SZXN1bHRzL1JFUE9fQ09NTUlUIiwibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vanNvbiIsImNvbnRlbnQiOiJJbVkyT1dSak9UUTNORE0wTlRKbU1HVm1PREE1TURSaFlqTTFZalEwWW1aaU9EVTVZMk5tTXpFaSJ9LHsibmFtZSI6InBpcGVsaW5lUnVuUmVzdWx0cy9DT01NSVRfTUVTU0FHRSIsIm1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL2pzb24iLCJjb250ZW50IjoiSW5ScFkyc2diMllnYzI5dFpTQnRiM0psSWc9PSJ9LHsibmFtZSI6InBpcGVsaW5lUnVuUmVzdWx0cy9DT01NSVRfQVVUSE9SIiwibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vanNvbiIsImNvbnRlbnQiOiJJa3B2YjNOMElIWmhiaUJrWlhJZ1IzSnBaVzVrZENJPSJ9LHsibmFtZSI6InBpcGVsaW5lUnVuUmVzdWx0cy9DT01NSVRfQVVUSE9SX0VNQUlMIiwibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vanNvbiIsImNvbnRlbnQiOiJJbXB2YjNOMGRtUm5RR2R0WVdsc0xtTnZiU0k9In0seyJuYW1lIjoicGlwZWxpbmVSdW5SZXN1bHRzL0NPTU1JVF9USU1FU1RBTVAiLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIiwiY29udGVudCI6IklqSXdNalF0TURVdE1UVlVNREE2TVRVNk1Ua3JNREk2TURBaSJ9XX19fQ==",
            "chains.tekton.dev/signature-pipelinerun-201d033f-e5fc-4f7e-b974-30c7ff062ff7": "",
            "chains.tekton.dev/signed": "true"
        },
        "creationTimestamp": "2024-05-16T20:55:57Z",
        "finalizers": [
            "chains.tekton.dev/pipelinerun"
        ],
        "generateName": "idec-image-builds-run-tqzgl-r-",
        "generation": 1,
        "labels": {
            "dashboard.tekton.dev/rerunOf": "idec-image-builds-run-tqzgl-r-zklfm",
            "tekton.dev/pipeline": "idec-image-builds",
            "triggers.tekton.dev/eventlistener": "idec-image-builds",
            "triggers.tekton.dev/trigger": "github-listener",
            "triggers.tekton.dev/triggers-eventid": "b09a980e-2b5d-4321-afab-068ac1d2f45d"
        },
        "name": "idec-image-builds-run-tqzgl-r-sl49z",
        "namespace": "idec",
        "resourceVersion": "202982310",
        "uid": "201d033f-e5fc-4f7e-b974-30c7ff062ff7"
    },
    "spec": {
        "params": [
            {
                "name": "gitrevision",
                "value": "f69dc94743452f0ef80904ab35b44bfb859ccf31"
            },
            {
                "name": "repo-url",
                "value": "https://github.com/joostvdg/ingress-dns-export-controller.git"
            },
            {
                "name": "base",
                "value": "0.2"
            },
            {
                "name": "registry",
                "value": "harbor.home.lab"
            },
            {
                "name": "repo",
                "value": "homelab/idec"
            },
            {
                "name": "commit_message",
                "value": "tick of some more"
            },
            {
                "name": "commit_author",
                "value": "Joost van der Griendt"
            },
            {
                "name": "commit_author_email",
                "value": "joostvdg@gmail.com"
            },
            {
                "name": "commit_timestamp",
                "value": "2024-05-15T00:15:19+02:00"
            }
        ],
        "pipelineRef": {
            "name": "idec-image-builds"
        },
        "taskRunTemplate": {
            "serviceAccountName": "default"
        },
        "timeouts": {
            "pipeline": "1h0m0s"
        },
        "workspaces": [
            {
                "name": "checkout",
                "volumeClaimTemplate": {
                    "metadata": {
                        "creationTimestamp": null
                    },
                    "spec": {
                        "accessModes": [
                            "ReadWriteOnce"
                        ],
                        "resources": {
                            "requests": {
                                "storage": "1Gi"
                            }
                        }
                    },
                    "status": {}
                }
            },
            {
                "name": "registry-credentials",
                "secret": {
                    "secretName": "kaniko-harbor"
                }
            },
            {
                "emptyDir": {},
                "name": "maven-settings"
            },
            {
                "emptyDir": {},
                "name": "helm-config"
            }
        ]
    },
    "status": {
        "childReferences": [
            {
                "apiVersion": "tekton.dev/v1",
                "kind": "TaskRun",
                "name": "idec-image-builds-run-tqzgl-r-sl49z-fetch-source",
                "pipelineTaskName": "fetch-source"
            },
            {
                "apiVersion": "tekton.dev/v1",
                "kind": "TaskRun",
                "name": "idec-image-builds-run-tqzgl-r-sl49z-metadata-collection",
                "pipelineTaskName": "metadata-collection"
            },
            {
                "apiVersion": "tekton.dev/v1",
                "kind": "TaskRun",
                "name": "idec-image-builds-run-tqzgl-r-sl49z-git-next-tag",
                "pipelineTaskName": "git-next-tag"
            },
            {
                "apiVersion": "tekton.dev/v1",
                "kind": "TaskRun",
                "name": "idec-image-builds-run-tqzgl-r-sl49z-maven-run",
                "pipelineTaskName": "maven-run"
            },
            {
                "apiVersion": "tekton.dev/v1",
                "kind": "TaskRun",
                "name": "idec-image-builds-run-tqzgl-r-sl49z-create-and-push-git-tag",
                "pipelineTaskName": "create-and-push-git-tag"
            },
            {
                "apiVersion": "tekton.dev/v1",
                "kind": "TaskRun",
                "name": "idec-image-builds-run-tqzgl-r-sl49z-kaniko-arm64",
                "pipelineTaskName": "kaniko-arm64"
            },
            {
                "apiVersion": "tekton.dev/v1",
                "kind": "TaskRun",
                "name": "idec-image-builds-run-tqzgl-r-sl49z-publish-helm-chart",
                "pipelineTaskName": "publish-helm-chart"
            }
        ],
        "completionTime": "2024-05-16T20:58:27Z",
        "conditions": [
            {
                "lastTransitionTime": "2024-05-16T20:58:27Z",
                "message": "Tasks Completed: 7 (Failed: 0, Cancelled 0), Skipped: 4",
                "reason": "Completed",
                "status": "True",
                "type": "Succeeded"
            }
        ],
        "finallyStartTime": "2024-05-16T20:58:27Z",
        "pipelineSpec": {
            "description": "This pipeline clones a git repo, then echoes the README file to the stdout.\n",
            "finally": [
                {
                    "name": "notify-build-failure",
                    "params": [
                        {
                            "name": "webhook-secret",
                            "value": "slack-webhook"
                        },
                        {
                            "name": "message",
                            "value": "Maven Build failed [https://github.com/joostvdg/ingress-dns-export-controller.git - f69dc94743452f0ef80904ab35b44bfb859ccf31] ---- $(tasks.maven-run.status)"
                        }
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "send-to-webhook-slack"
                    },
                    "when": [
                        {
                            "input": "$(tasks.maven-run.status)",
                            "operator": "in",
                            "values": [
                                "Failed"
                            ]
                        }
                    ]
                },
                {
                    "name": "notify-fetch-failure",
                    "params": [
                        {
                            "name": "webhook-secret",
                            "value": "slack-webhook"
                        },
                        {
                            "name": "message",
                            "value": "Cannot fetch source [https://github.com/joostvdg/ingress-dns-export-controller.git - f69dc94743452f0ef80904ab35b44bfb859ccf31] -----  $(tasks.fetch-source.status)"
                        }
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "send-to-webhook-slack"
                    },
                    "when": [
                        {
                            "input": "$(tasks.fetch-source.status)",
                            "operator": "in",
                            "values": [
                                "Failed"
                            ]
                        }
                    ]
                },
                {
                    "name": "notify-kaniko-arm-failure",
                    "params": [
                        {
                            "name": "webhook-secret",
                            "value": "slack-webhook"
                        },
                        {
                            "name": "message",
                            "value": "Kaniko ARM64 Build failed [https://github.com/joostvdg/ingress-dns-export-controller.git - f69dc94743452f0ef80904ab35b44bfb859ccf31] ------ $(tasks.kaniko-arm64.status)"
                        }
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "send-to-webhook-slack"
                    },
                    "when": [
                        {
                            "input": "$(tasks.kaniko-arm64.status)",
                            "operator": "in",
                            "values": [
                                "Failed"
                            ]
                        }
                    ]
                },
                {
                    "name": "notify-helm-failure",
                    "params": [
                        {
                            "name": "webhook-secret",
                            "value": "slack-webhook"
                        },
                        {
                            "name": "message",
                            "value": "Helm Publish failed [https://github.com/joostvdg/ingress-dns-export-controller.git - f69dc94743452f0ef80904ab35b44bfb859ccf31] ----- $(tasks.publish-helm-chart.status)"
                        }
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "send-to-webhook-slack"
                    },
                    "when": [
                        {
                            "input": "$(tasks.publish-helm-chart.status)",
                            "operator": "in",
                            "values": [
                                "Failed"
                            ]
                        }
                    ]
                }
            ],
            "params": [
                {
                    "description": "The git repo URL to clone from.",
                    "name": "repo-url",
                    "type": "string"
                },
                {
                    "description": "version Base to query Git tags for (e.g., v2.1.*)",
                    "name": "base",
                    "type": "string"
                },
                {
                    "description": "git revision to checkout",
                    "name": "gitrevision",
                    "type": "string"
                },
                {
                    "default": "ghcr.io/joostvdg/git-next-tag:0.5.4-alpine",
                    "description": "image to use for the git-next-tag task",
                    "name": "image",
                    "type": "string"
                },
                {
                    "default": "Dockerfile",
                    "description": "dockerfile to use for the kaniko task",
                    "name": "dockerfile",
                    "type": "string"
                },
                {
                    "default": "ghcr.io",
                    "description": "registry to push to",
                    "name": "registry",
                    "type": "string"
                },
                {
                    "default": "joostvdg/idec",
                    "description": "repo to push to",
                    "name": "repo",
                    "type": "string"
                },
                {
                    "default": "latest",
                    "description": "tag to push to",
                    "name": "tag",
                    "type": "string"
                },
                {
                    "default": "N/A",
                    "description": "The commit message of the git commit that triggered this pipeline.",
                    "name": "commit_message",
                    "type": "string"
                },
                {
                    "default": "N/A",
                    "description": "The author of the git commit that triggered this pipeline.",
                    "name": "commit_author",
                    "type": "string"
                },
                {
                    "default": "N/A",
                    "description": "The email of the author of the git commit that triggered this pipeline.",
                    "name": "commit_author_email",
                    "type": "string"
                },
                {
                    "default": "N/A",
                    "description": "The timestamp of the git commit that triggered this pipeline.",
                    "name": "commit_timestamp",
                    "type": "string"
                }
            ],
            "results": [
                {
                    "description": "The image that was built.",
                    "name": "IMAGE_URL",
                    "type": "string",
                    "value": "$(tasks.kaniko-arm64.results.IMAGE_URL)"
                },
                {
                    "description": "The digest of the image that was built.",
                    "name": "IMAGE_DIGEST",
                    "type": "string",
                    "value": "$(tasks.kaniko-arm64.results.IMAGE_DIGEST)"
                },
                {
                    "description": "The version of the image that was built.",
                    "name": "VERSION",
                    "type": "string",
                    "value": "$(tasks.git-next-tag.results.NEXT_TAG)"
                },
                {
                    "description": "The URL of the git repository that was cloned.",
                    "name": "REPO_URL",
                    "type": "string",
                    "value": "$(tasks.fetch-source.results.url)"
                },
                {
                    "description": "The branch of the git repository that was cloned.",
                    "name": "REPO_COMMIT_TIMESTAMP",
                    "type": "string",
                    "value": "$(tasks.fetch-source.results.committer-date)"
                },
                {
                    "description": "The commit of the git repository that was cloned.",
                    "name": "REPO_COMMIT",
                    "type": "string",
                    "value": "$(tasks.fetch-source.results.commit)"
                },
                {
                    "description": "",
                    "name": "COMMIT_MESSAGE",
                    "type": "string",
                    "value": "$(tasks.metadata-collection.results.COMMIT_MESSAGE)"
                },
                {
                    "description": "",
                    "name": "COMMIT_AUTHOR",
                    "type": "string",
                    "value": "$(tasks.metadata-collection.results.COMMIT_AUTHOR)"
                },
                {
                    "description": "",
                    "name": "COMMIT_AUTHOR_EMAIL",
                    "type": "string",
                    "value": "$(tasks.metadata-collection.results.COMMIT_AUTHOR_EMAIL)"
                },
                {
                    "description": "",
                    "name": "COMMIT_TIMESTAMP",
                    "type": "string",
                    "value": "$(tasks.metadata-collection.results.COMMIT_TIMESTAMP)"
                }
            ],
            "tasks": [
                {
                    "name": "fetch-source",
                    "params": [
                        {
                            "name": "url",
                            "value": "https://github.com/joostvdg/ingress-dns-export-controller.git"
                        },
                        {
                            "name": "revision",
                            "value": "f69dc94743452f0ef80904ab35b44bfb859ccf31"
                        }
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "git-clone"
                    },
                    "workspaces": [
                        {
                            "name": "output",
                            "workspace": "checkout"
                        }
                    ]
                },
                {
                    "name": "metadata-collection",
                    "params": [
                        {
                            "name": "commit_message",
                            "value": "tick of some more"
                        },
                        {
                            "name": "commit_author",
                            "value": "Joost van der Griendt"
                        },
                        {
                            "name": "commit_author_email",
                            "value": "joostvdg@gmail.com"
                        },
                        {
                            "name": "commit_timestamp",
                            "value": "2024-05-15T00:15:19+02:00"
                        }
                    ],
                    "runAfter": [
                        "fetch-source"
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "git-push-metadata-collector"
                    }
                },
                {
                    "name": "git-next-tag",
                    "params": [
                        {
                            "name": "base",
                            "value": "0.2"
                        },
                        {
                            "name": "image",
                            "value": "ghcr.io/joostvdg/git-next-tag:0.5.4-alpine"
                        }
                    ],
                    "runAfter": [
                        "metadata-collection"
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "git-next-tag"
                    },
                    "workspaces": [
                        {
                            "name": "source",
                            "workspace": "checkout"
                        }
                    ]
                },
                {
                    "name": "maven-run",
                    "params": [
                        {
                            "name": "GOALS",
                            "value": [
                                "clean",
                                "verify",
                                "-e",
                                "-C",
                                "-B",
                                "--show-version",
                                "--no-transfer-progress"
                            ]
                        },
                        {
                            "name": "MAVEN_IMAGE",
                            "value": "maven:3.9-eclipse-temurin-21"
                        }
                    ],
                    "runAfter": [
                        "fetch-source"
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "maven"
                    },
                    "workspaces": [
                        {
                            "name": "maven-settings",
                            "workspace": "maven-settings"
                        },
                        {
                            "name": "source",
                            "workspace": "checkout"
                        }
                    ]
                },
                {
                    "name": "create-and-push-git-tag",
                    "params": [
                        {
                            "name": "TAG",
                            "value": "$(tasks.git-next-tag.results.NEXT_TAG)"
                        },
                        {
                            "name": "GITHUB_USERNAME",
                            "value": "tekton-bot"
                        },
                        {
                            "name": "GITHUB_EMAIL",
                            "value": "joostvdg+tekton-bot@gmail.com"
                        }
                    ],
                    "runAfter": [
                        "git-next-tag"
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "github-create-tag"
                    },
                    "workspaces": [
                        {
                            "name": "source",
                            "workspace": "checkout"
                        }
                    ]
                },
                {
                    "name": "kaniko-arm64",
                    "params": [
                        {
                            "name": "IMAGE",
                            "value": "harbor.home.lab/homelab/idec:$(tasks.git-next-tag.results.NEXT_TAG)"
                        },
                        {
                            "name": "DOCKERFILE",
                            "value": "Dockerfile"
                        },
                        {
                            "name": "EXTRA_ARGS",
                            "value": [
                                "--customPlatform=linux/arm64",
                                "--skip-tls-verify-registry=harbor.home.lab"
                            ]
                        }
                    ],
                    "runAfter": [
                        "git-next-tag"
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "kaniko"
                    },
                    "workspaces": [
                        {
                            "name": "source",
                            "workspace": "checkout"
                        },
                        {
                            "name": "dockerconfig",
                            "workspace": "registry-credentials"
                        }
                    ]
                },
                {
                    "name": "publish-helm-chart",
                    "params": [
                        {
                            "name": "HELM_CA_FILE_SECRET",
                            "value": "kearos-ca"
                        },
                        {
                            "name": "REGISTRY_SECRET_NAME",
                            "value": "harbor-helm"
                        },
                        {
                            "name": "PACKAGE_VERSION",
                            "value": "$(tasks.git-next-tag.results.NEXT_TAG)"
                        },
                        {
                            "name": "HELM_CHART_VERSION",
                            "value": "$(tasks.git-next-tag.results.NEXT_TAG)"
                        },
                        {
                            "name": "HELM_CHART_NAME",
                            "value": "ingress-dns-export-controller"
                        },
                        {
                            "name": "HELM_CHART_DIR",
                            "value": "helm"
                        },
                        {
                            "name": "HELM_REPO",
                            "value": "charts"
                        },
                        {
                            "name": "HELM_REGISTRY_HOST",
                            "value": "harbor.home.lab:443"
                        },
                        {
                            "name": "HELM_REGISTRY_URL",
                            "value": "oci://harbor.home.lab:443"
                        }
                    ],
                    "runAfter": [
                        "git-next-tag"
                    ],
                    "taskRef": {
                        "kind": "Task",
                        "name": "helm-publish-package"
                    },
                    "workspaces": [
                        {
                            "name": "source",
                            "workspace": "checkout"
                        },
                        {
                            "name": "helm",
                            "workspace": "helm-config"
                        }
                    ]
                }
            ],
            "workspaces": [
                {
                    "description": "This workspace contains the cloned repo files, so they can be read by the\nnext task.\n",
                    "name": "checkout"
                },
                {
                    "description": "This workspace contains the registry credentials, so they can be read by the\nnext task.\n",
                    "name": "registry-credentials"
                },
                {
                    "description": "This workspace contains the maven settings, so they can be read by the\nnext task.\n",
                    "name": "maven-settings"
                },
                {
                    "description": "This workspace contains the helm repository config.\nAs the container has a read-only file system, the helm config is mounted as a workspace.\n",
                    "name": "helm-config"
                }
            ]
        },
        "provenance": {
            "featureFlags": {
                "AwaitSidecarReadiness": true,
                "Coschedule": "workspaces",
                "DisableAffinityAssistant": false,
                "DisableCredsInit": false,
                "EnableAPIFields": "beta",
                "EnableCELInWhenExpression": false,
                "EnableKeepPodOnCancel": false,
                "EnableProvenanceInStatus": true,
                "EnableStepActions": false,
                "EnableTektonOCIBundles": false,
                "EnforceNonfalsifiability": "none",
                "MaxResultSize": 4096,
                "RequireGitSSHSecretKnownHosts": false,
                "ResultExtractionMethod": "termination-message",
                "RunningInEnvWithInjectedSidecars": true,
                "ScopeWhenExpressionsToTask": false,
                "SendCloudEventsForRuns": false,
                "SetSecurityContext": false,
                "VerificationNoMatchPolicy": "ignore"
            }
        },
        "results": [
            {
                "name": "IMAGE_URL",
                "value": "harbor.home.lab/homelab/idec:0.2.5"
            },
            {
                "name": "IMAGE_DIGEST",
                "value": "sha256:a8f386d6de25975d2b877893500bf850aae99d29e2d458e285ea9a9f5688db2e"
            },
            {
                "name": "VERSION",
                "value": "0.2.5"
            },
            {
                "name": "REPO_URL",
                "value": "https://github.com/joostvdg/ingress-dns-export-controller.git"
            },
            {
                "name": "REPO_COMMIT_TIMESTAMP",
                "value": "1715724919"
            },
            {
                "name": "REPO_COMMIT",
                "value": "f69dc94743452f0ef80904ab35b44bfb859ccf31"
            },
            {
                "name": "COMMIT_MESSAGE",
                "value": "tick of some more"
            },
            {
                "name": "COMMIT_AUTHOR",
                "value": "Joost van der Griendt"
            },
            {
                "name": "COMMIT_AUTHOR_EMAIL",
                "value": "joostvdg@gmail.com"
            },
            {
                "name": "COMMIT_TIMESTAMP",
                "value": "2024-05-15T00:15:19+02:00"
            }
        ],
        "skippedTasks": [
            {
                "name": "notify-build-failure",
                "reason": "When Expressions evaluated to false",
                "whenExpressions": [
                    {
                        "input": "Succeeded",
                        "operator": "in",
                        "values": [
                            "Failed"
                        ]
                    }
                ]
            },
            {
                "name": "notify-fetch-failure",
                "reason": "When Expressions evaluated to false",
                "whenExpressions": [
                    {
                        "input": "Succeeded",
                        "operator": "in",
                        "values": [
                            "Failed"
                        ]
                    }
                ]
            },
            {
                "name": "notify-kaniko-arm-failure",
                "reason": "When Expressions evaluated to false",
                "whenExpressions": [
                    {
                        "input": "Succeeded",
                        "operator": "in",
                        "values": [
                            "Failed"
                        ]
                    }
                ]
            },
            {
                "name": "notify-helm-failure",
                "reason": "When Expressions evaluated to false",
                "whenExpressions": [
                    {
                        "input": "Succeeded",
                        "operator": "in",
                        "values": [
                            "Failed"
                        ]
                    }
                ]
            }
        ],
        "startTime": "2024-05-16T20:55:57Z"
    }
}
